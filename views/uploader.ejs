<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Post</title>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
    <style>
        /* General styles */
        body {
          font-family: Arial, sans-serif;
          background-color: #f5f5f5;
          margin: 0;
          padding: 0;
        }

        header {
          background-color: #3f99e8;
          color: #fff;
          padding: 20px;
          text-align: center;
        }

        main {
          display: flex;
          justify-content: center;
          align-items: center;
          height: 80vh;
        }

        form {
          background-color: #fff;
          border: 1px solid #ddd;
          border-radius: 5px;
          padding: 20px;
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
          width: 300px;
          animation: fadeIn 1s ease-in-out;
        }

        form div {
          margin-bottom: 15px;
        }

        label {
          display: block;
          margin-bottom: 5px;
          font-weight: bold;
        }

        input[type="file"],
        input[type="text"],
        textarea {
          width: 100%;
          padding: 10px;
          border: 1px solid #ccc;
          border-radius: 3px;
          transition: border-color 0.3s;
        }

        input[type="file"]:focus,
        input[type="text"]:focus,
        textarea:focus {
          border-color: #3f99e8;
        }

        button {
          background-color: #3f99e8;
          color: #fff;
          border: none;
          padding: 10px 20px;
          border-radius: 3px;
          cursor: pointer;
          transition: background-color 0.3s;
        }

        button:hover {
          background-color: #357abd;
        }

        /* Animation */
        @keyframes fadeIn {
          from {
            opacity: 0;
            transform: translateY(-10px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }

        /* Cropper styles */
        .crop-container {
          display: none;
        }
        .crop-container img {
          max-width: 100%;
        }
    </style>
</head>

<body>
  <header>
      <h1>Upload a New Post</h1>
  </header>
  <main>
      <form id="upload-form" action="/upload" method="post" enctype="multipart/form-data">
          <div>
              <label for="image">Image:</label>
              <input type="file" name="image" id="image" accept="image/*" required>
          </div>
          <div class="crop-container">
              <img id="image-preview" src="" alt="Image Preview">
              <button type="button" id="crop-button">Crop</button>
          </div>
          <div>
              <label for="title">Title:</label>
              <input type="text" name="title" id="title" required>
          </div>
          <div>
              <label for="content">Content:</label>
              <textarea name="content" id="content" required></textarea>
          </div>
          <div>
              <label for="prices">Prices:</label>
              <input type="text" name="prices" id="prices" required>
          </div>
          <button type="submit">Submit</button>
      </form>
  </main>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
  <script>
      const imageInput = document.getElementById('image');
      const imagePreview = document.getElementById('image-preview');
      const cropContainer = document.querySelector('.crop-container');
      const cropButton = document.getElementById('crop-button');
      const uploadForm = document.getElementById('upload-form');
      let cropper;

      imageInput.addEventListener('change', (event) => {
          const file = event.target.files[0];
          if (file) {
              const reader = new FileReader();
              reader.onload = (e) => {
                  imagePreview.src = e.target.result;
                  cropContainer.style.display = 'block';
                  if (cropper) {
                      cropper.destroy();
                  }
                  cropper = new Cropper(imagePreview, {
                      aspectRatio: 1,
                      viewMode: 1,
                      autoCropArea: 1,
                  });
              };
              reader.readAsDataURL(file);
          }
      });

      cropButton.addEventListener('click', () => {
          const canvas = cropper.getCroppedCanvas();
          canvas.toBlob((blob) => {
              const formData = new FormData(uploadForm);
              formData.set('image', blob, 'croppedImage.png');

              // // Use fetch or XMLHttpRequest to upload the image
              // fetch('/upload', {
              //     method: 'POST',
              //     body: formData,
              // })
              // .then(response => response.json())
              // .then(data => {
              //     console.log('Upload successful:', data);
              //     // Handle the response data
              // })
              // .catch(error => {
              //     console.error('Error uploading image:', error);
              // });
          });
      });
  </script>
</body>
</html>
